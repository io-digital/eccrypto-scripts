#!/usr/bin/env node

'use strict'

var crypto = require('crypto')
var stdin = require('get-stdin')
var eccrypto = require('eccrypto')

var command = process.argv[0]
var script = process.argv[1]
var private_key = process.argv[2]
var message = process.argv[3]

var pk, m

stdin.buffer().then(function(s) {

  if (!s.length && typeof message === 'undefined') {
    return process.stdout.write(JSON.stringify({
      error: 'message not given'
    }), function() {
      process.exit(1)
    })
  }

  m = crypto.createHash('sha256').update(s || message).digest()

  if (!private_key) {
    return process.stdout.write(JSON.stringify({
      error: 'private key not given'
    }), function() {
      process.exit(1)
    })
  }

  try {
    pk = Buffer(private_key, 'hex')
  } catch (err) {
    return process.stdout.write(JSON.stringify({
      error: 'private key is not a hexadecimal string'
    }), function() {
      process.exit(1)
    })
  }

  return eccrypto.sign(pk, m)

}).then(function(signature) {
  process.stdout.write(JSON.stringify({
    signature: signature.toString('hex')
  }), function() {
    process.exit(0)
  })

}).catch(function(err) {
  process.stdout.write(JSON.stringify({
    error: 'signature creation failed',
    eccrypto_error: JSON.stringify(err || true)}
  ), function() {
    process.exit(1)
  })
})
