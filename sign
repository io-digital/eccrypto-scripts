#!/usr/bin/env node

'use strict'

var crypto = require('crypto')
var eccrypto = require('eccrypto')

var command = process.argv[0]
var script = process.argv[1]
var private_key = process.argv[2]
var message = process.argv[3]

if (!(private_key && message)) {
  process.stdout.write(JSON.stringify({
    error: 'private key or message not given'
  }))
  process.exit(1)
}

var pk, m

try {
  pk = Buffer.from(private_key, 'hex')
  m = crypto.createHash('sha256').update(message).digest()
} catch (err) {
  process.stdout.write(JSON.stringify({
    error: 'private key or message is not a hexadecimal string'
  }))
  process.exit(1)
}

eccrypto.sign(pk, m).then(function(signature) {
  process.stdout.write(JSON.stringify({signature: signature.toString('hex')}))
  process.exit(0)
}).catch(function(err) {
  process.stdout.write(JSON.stringify({
    error: 'signature creation failed',
    eccrypto_error: JSON.stringify(err || true)}
  ))
  process.exit(1)
})
